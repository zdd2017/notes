基本规则：
CSS放在文档顶部，即在<head>标签里，JS放在底部。（避免使用@import，因为它相当于把CSS放在底部）
在下载页面过程中，html最早下载，然后浏览器解析html，同时构建和渲染DOM Tree,将CSS放在页面顶部，那么浏览器就可以立刻开始渲染。CSS如果放在后面可能页面会出现白屏或布局样式混乱直到CSS加载完成。遇到js文件加载执行，将阻塞DOM树构建；
一、减少HTTP请求次数
1.多个文件合并成一个
2.CSS Sprites 把多个图片拼成一个图片，然后通过CSS样式来控制图片显示位置。对非固定尺寸元素不起作用。如果一个元素是流态的不能精灵化，那么在它里面放置一个空元素解决尺寸问题，然后就可以尺寸化了。
3.图标动画可以用CSS效果来实现

二、DNS查询
浏览器可以从不同域名中并行下载资源，但每次一个新域名被引用，会带来DNS查询时间损耗。DNS查询结果缓存在本地系统和浏览器中一段时间，所以DNS查询一般是对首次访问响应速度有影响。DNS查询代价很高，因此你需要决定什么才是对你的网站更合适的；承担查询的消耗或者只是由一个域名提供所有服务。

三、避免页面跳转
当客户端收到服务器的跳转回复时，客户端再次根据服务器端回复中的location的指定地址发送请求。

四、减少DOM元素数量

五、CSS，js代码精简。使用外部的js和css文件可以使这些文件被浏览器缓存，从而在不同的请求内容之间复用。

六、CSS选择器优化
浏览器从右向左解析选择器，关键选择器是一个复杂的CSS选择器中最右边部分，是浏览器最先寻找的，要慎重选择。ID/类选择器 和 元素/后代选择器中间的差异较大，但是相互之间的差异较小。另外避免过度限制选择器

七、设置浏览器缓存
<meta http-equiv="Cache-Control" content="max-age=5" />
该代码说明了浏览器启用了缓存并在5秒内不会再次访问服务器。

八、避免页面重绘和回流
元素，图片给定宽高

九、资源复用
1.使用CSS样式库
2.高宽自适应
3.CSS3 font-face技术-纯色图标大小以及颜色可以随意控制，增强复用